[core]
  editor = vim
  #editor = idea -e --wait
  #excludesfile   = ~/.config/git/ignore
  attributesfile = ~/.config/git/attributes
  whitespace = trailing-space,space-before-tab

[alias]
    a = "!git ls-files --deleted --modified --other --exclude-standard \
            | fzf -0 -m --height 40% --layout=reverse --border \
                --preview 'git diff --color=always -- {-1}' \
                --preview-window=right:60%:wrap \
            | xargs -r git add"
    ap = "!git ls-files --deleted --modified --other --exclude-standard \
            | fzf -0 -m --height 40% --layout=reverse --border \
                --preview 'git diff --color=always -- {-1}' \
                --preview-window=right:60%:wrap \
            | xargs -r -I {} sh -c 'git add -p -- "$1" </dev/tty' _ {}"


    branch-cleaner = !git branch --merged master --no-color | grep -v '^[ *]*master$' | xargs git branch -d
    b = branch
    ba = branch -a
    bd = branch -D

    ch = "!git diff --name-only HEAD \
            | fzf -0 -m --height 40% --layout=reverse --border \
                --preview 'git diff --color=always HEAD -- {-1}' \
                --preview-window=right:60%:wrap \
            | xargs -r -n1 git checkout --"

    co = checkout
    com = checkout master
    coma = checkout main
    comp = !git checkout master && git pull
    comap = !git checkout main && git pull

    chp = cherry-pick

    cm = commit -m
    cf = commit --fixup
    can  = commit --amend --no-edit
    acan = !git add . && git commit --amend --no-edit


    d = "!f() { \
            files=$(git ls-files --deleted --modified --other --exclude-standard); \
            count=$(echo \"$files\" | grep -c .); \
            if [ \"$count\" -eq 1 ]; then \
                git diff -- \"$files\"; \
            elif [ \"$count\" -gt 1 ]; then \
                echo \"$files\" | fzf -0 -m --height 40% --layout=reverse --border \
                    --preview 'git diff --color=always -- {-1} | sed -n \"1,200p\"' \
                    --preview-window=right:70%:wrap \
                | xargs -r git diff --; \
            fi; \
        }; f"
    ds = "!f() { \
            files=$(git diff --name-only --staged); \
            count=$(echo \"$files\" | grep -c .); \
            if [ \"$count\" -eq 1 ]; then \
                git diff --staged -- \"$files\"; \
            elif [ \"$count\" -gt 1 ]; then \
                echo \"$files\" | fzf -0 -m --height 40% --layout=reverse --border \
                    --preview 'git diff --staged --color=always -- {-1} | sed -n \"1,200p\"' \
                    --preview-window=right:60%:wrap \
                | xargs -r git diff --staged --; \
            fi; \
        }; f"
    din   = diff --name-only master...HEAD  # list files that have changed
    mt    = mergetool
    p = pull
    pu = push
    re = "!git diff --cached --name-only \
            | fzf -0 -m --height 40% --layout=reverse --border \
                --preview 'git diff --staged --color=always -- {-1}' \
                --preview-window=right:60%:wrap \
            | xargs -r -n1 git reset HEAD --"
    s     = status
    ss    = status --short

    spu   = stash push # previously stash save
    spo   = stash pop

    wip = !git add . && git commit -a -m "--wip-- [ci skip]" --no-verify
    wipr = !git reset --soft HEAD~ && git reset
    wt = worktree

    l  = "!f() { \
            if [ $# -eq 0 ]; then \
                git log --all --pretty=format:'%Cgreen%h%Creset %s %Cred%d%Creset' --color=always \
                    | fzf --ansi --preview 'git show --pretty=medium --color=always $(echo {} | cut -d\" \" -f1)' \
                    | cut -d\" \" -f1; \
            else \
                git log --pretty=format:'%Cgreen%h%Creset %s %Cred%d%Creset' --color=always \"$@\" \
                    | fzf --ansi --preview 'git show --pretty=medium --color=always $(echo {} | cut -d\" \" -f1)' \
                    | cut -d\" \" -f1; \
            fi; \
        }; f"
    ll = !git log --graph --decorate --date=short --pretty=format:'%C(magenta)%h%Creset %C(italic brightblack)%ad%C(reset)%C(auto) %s %C(blue)%an%C(auto) %D%C(reset)'

    # compare two commits
    compare = "!compare() { \
        if git merge-base --is-ancestor \"$1\" \"$2\"; then \
            echo \"    $1  ──▶  $2\"; \
            echo \"    $1 is an ancestor of $2\"; \
            echo \"i.e $2 commit was after $1\"; \
        elif git merge-base --is-ancestor \"$2\" \"$1\"; then \
            echo \"    $2  ──▶  $1\"; \
            echo \"    $2 is an ancestor of $1\"; \
            echo \"i.e $1 commit was after $2\"; \
        else \
            echo \"✘   these commits are not related\"; \
        fi; \
    }; compare"

[credential]
	helper = osxkeychain

[feature]
    manyFiles = 1

[color]
  ui = always           # all output (not intended for machine consumption) should always use color

[pull]
  rebase = false

[push]
  default = tracking
  autoSetupRemote = true

[status]
  submoduleSummary = true

[url "git@github.com:"]                   # URL shorthands
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"
[index]
	skipHash = false
[log]
	follow = true

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[branch]
	sort = -committerdate
[fetch]
	prune = true

[rebase]
	updateRefs = true
    autosquash = true  # see --fixup


[merge]
  conflictStyle = zdiff3
[mergetool]
  keepBackup = false
[mergetool "cursor"]
  cmd = cursor --wait $MERGED
[mergetool "idea"]
  cmd = idea merge $LOCAL $REMOTE $BASE $MERGED
  trustExitCode = true
[mergetool "meld"]
  cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
[mergetool "vscode"]
  cmd = code --wait $MERGED

#####################
# delta configuation
[core]
    pager = delta
[interactive]
    diffFilter = delta --color-only
[pager]
    show = delta




######################
# delta theme config
[delta]
    navigate    = false  # use n and N to move between diff sections
    features    = chameleon
#    syntax-theme = base16
#    file-decoration-style = brightblack ul
#    file-style = box gray
#    hunk-header-decoration-style = brightblack ul
    hunk-header-style = omit
    line-numbers = true
    line-numbers-left-format = {nm:>3}
#    line-numbers-left-style = brightblack
#    line-numbers-minus-style = brightblack
#    line-numbers-plus-style = brightblack
    line-numbers-right-format = {np:>3} 
#    line-numbers-right-style = brightblack
#    line-numbers-zero-style = brightblack
#    minus-emph-style = red bold
#    minus-empty-line-marker-style = omit
#    minus-style = red
#    plus-emph-style = green bold
#    plus-empty-line-marker-style = omit
#    plus-style = green
#    side-by-side = false
#    true-color = auto
#    whitespace-error-style = red reverse
#    zero-style = brightblack
#
[delta "chameleon"] # https://github.com/AirOnSkin/dotfiles/blob/main/dot_gitconfig.tmpl
  # features
  dark = true
  tabs = 2
  line-numbers = true
  side-by-side = true
  keep-plus-minus-markers = false
  syntax-theme = Nord

  # file style
  file-style = "#434C5E" bold
  file-decoration-style = "#434C5E" ul
  file-added-label = [+]
  file-copied-label = [==]
  file-modified-label = [*]
  file-removed-label = [-]
  file-renamed-label = [->]

  # hunk header style
  hunk-header-style = omit

  # line numbers style
  line-numbers-left-format = " {nm:>3} │"
  line-numbers-left-style = red
  line-numbers-right-format = " {np:>3} │"
  line-numbers-right-style = green
  line-numbers-minus-style = red black
  line-numbers-plus-style = green brightblack
  line-numbers-zero-style = "#434C5E"

  # diff style
  minus-style = bold red # line removed
  minus-emph-style = bold "#202020" red # changed part of line
  minus-non-emph-style = bold # changed line backdrop
  plus-style = bold green # line added
  plus-emph-style = bold "#202020" green # changed part of line
  plus-non-emph-style = bold # changed line backdrop

  # unchanged lines style
  zero-style = syntax

  # style for git blame
  blame-code-style = syntax
  blame-format = "{author:<18} ({commit:>9}) {timestamp:^16}"
  blame-palette = "#2E3440" "#3B4252" "#434C5E" "#4C566A"

  # merge conflict style
  merge-conflict-begin-symbol = ~
  merge-conflict-end-symbol = ~
  merge-conflict-ours-diff-header-style = yellow bold
  merge-conflict-ours-diff-header-decoration-style = "#434C5E" box
  merge-conflict-theirs-diff-header-style = yellow bold
  merge-conflict-theirs-diff-header-decoration-style = "#434C5E" box
