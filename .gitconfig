[alias]
    a     = add
    ba    = branch -a
    bd    = branch -D
    c     = commit
    co    = checkout
    ca    = commit --amend # --no-edit
    chp   = cherry-pick
    cob   = checkout -B                          # switch to a branch, creating it if necessary
    d     = diff
    dc    = diff --cached
    ds    = diff --staged
    pmr   = push -o merge_request.create -o merge_request.merge_when_pipeline_succeeds  # push MR
    mt    = mergetool
    reb   = !"r() { git rebase --autosquash -i HEAD~$1; }; r"       # Interactive rebase with the given number of latest commits
    root  = "rev-parse --show-toplevel"
    rv    = remote -v
    wip   =  !"wip()  { git add .; git commit -a -m '--wip-- [ci skip]' --no-verify; }; wip"     # basically an immediate commit that u want in you reflog
    wipr  =  !"wipr() { git reset --soft HEAD~; git reset ; }; wipr"   # undo last commit (works well with gwip) - watch out though

    # format -> default/ original time zone (either committer’s or author’s)
    # format-local -> user's local timezone instead
    ll = log --decorate --date=short --pretty=format:'%C(magenta)%h%Creset %C(bold black)%ad%C(reset)%C(auto) %s %C(blue)%an%C(auto) %D%C(reset)'
    l =  ll --topo-order -30 --pretty=format:'%C(magenta)%h%Creset %C(yellow)%ad%C(reset)%C(auto) %s %C(blue)%an %C(bold black)%D%C(reset)'


[color]
  ui = always                                                                 # Use colors in Git commands that are capable of colored output when outputting to the terminal
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
#  meta = magenta bold
#  frag = cyan bold
#  old = red reverse
#  new = green reverse
  whitespace = white reverse
[color "status"]
  header = white normal dim
  added = red
  changed = green
  untracked = blue
  branch = yellow

[core]
  editor = idea -e --wait
  excludesfile = ~/.gitignore_global
  attributesfile = ~/.gitattributes
  whitespace = trailing-space,space-before-tab
  pager = "delta"

[credential]
	helper = osxkeychain

[delta]
    file-decoration-style = black ul
    file-style = black
    line-numbers = true
    line-numbers-left-format = {nm:>3}│
    line-numbers-left-style = black
    line-numbers-minus-style = black
    line-numbers-plus-style = black
    line-numbers-right-format = {np:>3}│
    line-numbers-right-style = black
    line-numbers-zero-style = black
    minus-emph-style = red bold
    minus-empty-line-marker-style = omit
    minus-style = red
    navigate = false
    plus-emph-style = green bold
    plus-empty-line-marker-style = omit
    plus-style = green
    side-by-side = false
    syntax-theme = base16
    true-color = auto
    zero-style = black
;     hunk-header-decoration-style = ul
;     hunk-header-line-number-style = black
;     hunk-header-style = raw

[diff]
    colorMoved = default
    mnemonicprefix = true
    compactionHeuristic = true
    show = delta

[feature]
    manyFiles = 1

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[includeIf "gitdir:~/"]
    path = .gitconfig-private

[init]
	defaultBranch = master

[interactive]
  diffFilter = delta --color-only --features=interactive

[merge]
  tool = idea
;   log = true
;   stat = true
;   conflictStyle = diff3

[mergetool]
  keepBackup = false

[mergetool "idea"]
  cmd = idea merge $LOCAL $REMOTE $BASE $MERGED
  trustExitCode = true

[mergetool "meld"]
  cmd = meld "$LOCAL" "$MERGED" "$REMOTE" --output "$MERGED"
;   cmd = meld "$LOCAL" "$BASE" "$REMOTE" --output "$MERGED"

[mergetool "vscode"]
  cmd = code --wait $MERGED

[pager]
    show = delta

[pull]
  rebase = false

[push]
  default = tracking

[status]
  submoduleSummary = true

[url "git@github.com:"]                                                       # URL shorthands
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"
[index]
	skipHash = false
[log]
	follow = true
